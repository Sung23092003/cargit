{"ast":null,"code":"\"use strict\";\n\nexports.transpose = transpose;\n\nvar _index = require(\"./constructFrom.js\");\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam DateInputType - The input `Date` type derived from the passed argument.\n * @typeParam DateOutputType - The output `Date` type derived from the passed constructor.\n *\n * @param fromDate - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\n\n\nfunction transpose(fromDate, constructor) {\n  const date = constructor instanceof Date ? (0, _index.constructFrom)(constructor, 0) : new constructor(0);\n  date.setFullYear(fromDate.getFullYear(), fromDate.getMonth(), fromDate.getDate());\n  date.setHours(fromDate.getHours(), fromDate.getMinutes(), fromDate.getSeconds(), fromDate.getMilliseconds());\n  return date;\n}","map":{"version":3,"names":["exports","transpose","_index","require","fromDate","constructor","date","Date","constructFrom","setFullYear","getFullYear","getMonth","getDate","setHours","getHours","getMinutes","getSeconds","getMilliseconds"],"sources":["D:/React-Car-Rental-Website-master/node_modules/date-fns/transpose.js"],"sourcesContent":["\"use strict\";\nexports.transpose = transpose;\nvar _index = require(\"./constructFrom.js\");\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam DateInputType - The input `Date` type derived from the passed argument.\n * @typeParam DateOutputType - The output `Date` type derived from the passed constructor.\n *\n * @param fromDate - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nfunction transpose(fromDate, constructor) {\n  const date =\n    constructor instanceof Date\n      ? (0, _index.constructFrom)(constructor, 0)\n      : new constructor(0);\n  date.setFullYear(\n    fromDate.getFullYear(),\n    fromDate.getMonth(),\n    fromDate.getDate(),\n  );\n  date.setHours(\n    fromDate.getHours(),\n    fromDate.getMinutes(),\n    fromDate.getSeconds(),\n    fromDate.getMilliseconds(),\n  );\n  return date;\n}\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,SAAR,GAAoBA,SAApB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,SAAT,CAAmBG,QAAnB,EAA6BC,WAA7B,EAA0C;EACxC,MAAMC,IAAI,GACRD,WAAW,YAAYE,IAAvB,GACI,CAAC,GAAGL,MAAM,CAACM,aAAX,EAA0BH,WAA1B,EAAuC,CAAvC,CADJ,GAEI,IAAIA,WAAJ,CAAgB,CAAhB,CAHN;EAIAC,IAAI,CAACG,WAAL,CACEL,QAAQ,CAACM,WAAT,EADF,EAEEN,QAAQ,CAACO,QAAT,EAFF,EAGEP,QAAQ,CAACQ,OAAT,EAHF;EAKAN,IAAI,CAACO,QAAL,CACET,QAAQ,CAACU,QAAT,EADF,EAEEV,QAAQ,CAACW,UAAT,EAFF,EAGEX,QAAQ,CAACY,UAAT,EAHF,EAIEZ,QAAQ,CAACa,eAAT,EAJF;EAMA,OAAOX,IAAP;AACD"},"metadata":{},"sourceType":"script"}