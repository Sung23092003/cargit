{"ast":null,"code":"\"use strict\";\n\nexports.formatDistance = void 0;\nconst formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\"\n  },\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\"\n  },\n  halfAMinute: \"half a minute\",\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\"\n  },\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\"\n  },\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\"\n  },\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\"\n  },\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\"\n  },\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\"\n  },\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\"\n  },\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\"\n  },\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\"\n  },\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\"\n  },\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\"\n  },\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\"\n  },\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\"\n  }\n};\n\nconst formatDistance = (token, count, options) => {\n  let result;\n  const tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n\nexports.formatDistance = formatDistance;","map":{"version":3,"names":["exports","formatDistance","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","token","count","options","result","tokenValue","replace","toString","addSuffix","comparison"],"sources":["D:/React-Car-Rental-Website-master/node_modules/date-fns/locale/en-US/_lib/formatDistance.js"],"sourcesContent":["\"use strict\";\nexports.formatDistance = void 0;\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nconst formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\nexports.formatDistance = formatDistance;\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,cAAR,GAAyB,KAAK,CAA9B;AAEA,MAAMC,oBAAoB,GAAG;EAC3BC,gBAAgB,EAAE;IAChBC,GAAG,EAAE,oBADW;IAEhBC,KAAK,EAAE;EAFS,CADS;EAM3BC,QAAQ,EAAE;IACRF,GAAG,EAAE,UADG;IAERC,KAAK,EAAE;EAFC,CANiB;EAW3BE,WAAW,EAAE,eAXc;EAa3BC,gBAAgB,EAAE;IAChBJ,GAAG,EAAE,oBADW;IAEhBC,KAAK,EAAE;EAFS,CAbS;EAkB3BI,QAAQ,EAAE;IACRL,GAAG,EAAE,UADG;IAERC,KAAK,EAAE;EAFC,CAlBiB;EAuB3BK,WAAW,EAAE;IACXN,GAAG,EAAE,cADM;IAEXC,KAAK,EAAE;EAFI,CAvBc;EA4B3BM,MAAM,EAAE;IACNP,GAAG,EAAE,QADC;IAENC,KAAK,EAAE;EAFD,CA5BmB;EAiC3BO,KAAK,EAAE;IACLR,GAAG,EAAE,OADA;IAELC,KAAK,EAAE;EAFF,CAjCoB;EAsC3BQ,WAAW,EAAE;IACXT,GAAG,EAAE,cADM;IAEXC,KAAK,EAAE;EAFI,CAtCc;EA2C3BS,MAAM,EAAE;IACNV,GAAG,EAAE,QADC;IAENC,KAAK,EAAE;EAFD,CA3CmB;EAgD3BU,YAAY,EAAE;IACZX,GAAG,EAAE,eADO;IAEZC,KAAK,EAAE;EAFK,CAhDa;EAqD3BW,OAAO,EAAE;IACPZ,GAAG,EAAE,SADE;IAEPC,KAAK,EAAE;EAFA,CArDkB;EA0D3BY,WAAW,EAAE;IACXb,GAAG,EAAE,cADM;IAEXC,KAAK,EAAE;EAFI,CA1Dc;EA+D3Ba,MAAM,EAAE;IACNd,GAAG,EAAE,QADC;IAENC,KAAK,EAAE;EAFD,CA/DmB;EAoE3Bc,UAAU,EAAE;IACVf,GAAG,EAAE,aADK;IAEVC,KAAK,EAAE;EAFG,CApEe;EAyE3Be,YAAY,EAAE;IACZhB,GAAG,EAAE,eADO;IAEZC,KAAK,EAAE;EAFK;AAzEa,CAA7B;;AA+EA,MAAMJ,cAAc,GAAG,CAACoB,KAAD,EAAQC,KAAR,EAAeC,OAAf,KAA2B;EAChD,IAAIC,MAAJ;EAEA,MAAMC,UAAU,GAAGvB,oBAAoB,CAACmB,KAAD,CAAvC;;EACA,IAAI,OAAOI,UAAP,KAAsB,QAA1B,EAAoC;IAClCD,MAAM,GAAGC,UAAT;EACD,CAFD,MAEO,IAAIH,KAAK,KAAK,CAAd,EAAiB;IACtBE,MAAM,GAAGC,UAAU,CAACrB,GAApB;EACD,CAFM,MAEA;IACLoB,MAAM,GAAGC,UAAU,CAACpB,KAAX,CAAiBqB,OAAjB,CAAyB,WAAzB,EAAsCJ,KAAK,CAACK,QAAN,EAAtC,CAAT;EACD;;EAED,IAAIJ,OAAO,EAAEK,SAAb,EAAwB;IACtB,IAAIL,OAAO,CAACM,UAAR,IAAsBN,OAAO,CAACM,UAAR,GAAqB,CAA/C,EAAkD;MAChD,OAAO,QAAQL,MAAf;IACD,CAFD,MAEO;MACL,OAAOA,MAAM,GAAG,MAAhB;IACD;EACF;;EAED,OAAOA,MAAP;AACD,CArBD;;AAsBAxB,OAAO,CAACC,cAAR,GAAyBA,cAAzB"},"metadata":{},"sourceType":"script"}