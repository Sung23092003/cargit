{"ast":null,"code":"\"use strict\";\n\nexports.getISODay = getISODay;\n\nvar _index = require(\"./toDate.js\");\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\n\n\nfunction getISODay(date) {\n  const _date = (0, _index.toDate)(date);\n\n  let day = _date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}","map":{"version":3,"names":["exports","getISODay","_index","require","date","_date","toDate","day","getDay"],"sources":["D:/React-Car-Rental-Website-master/node_modules/date-fns/getISODay.js"],"sourcesContent":["\"use strict\";\nexports.getISODay = getISODay;\nvar _index = require(\"./toDate.js\");\n\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nfunction getISODay(date) {\n  const _date = (0, _index.toDate)(date);\n  let day = _date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,SAAR,GAAoBA,SAApB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,SAAT,CAAmBG,IAAnB,EAAyB;EACvB,MAAMC,KAAK,GAAG,CAAC,GAAGH,MAAM,CAACI,MAAX,EAAmBF,IAAnB,CAAd;;EACA,IAAIG,GAAG,GAAGF,KAAK,CAACG,MAAN,EAAV;;EAEA,IAAID,GAAG,KAAK,CAAZ,EAAe;IACbA,GAAG,GAAG,CAAN;EACD;;EAED,OAAOA,GAAP;AACD"},"metadata":{},"sourceType":"script"}