{"ast":null,"code":"\"use strict\";\n\nexports.EraParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nclass EraParser extends _Parser.Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return match.era(dateString, {\n          width: \"abbreviated\"\n        }) || match.era(dateString, {\n          width: \"narrow\"\n        });\n      // A, B\n\n      case \"GGGGG\":\n        return match.era(dateString, {\n          width: \"narrow\"\n        });\n      // Anno Domini, Before Christ\n\n      case \"GGGG\":\n      default:\n        return match.era(dateString, {\n          width: \"wide\"\n        }) || match.era(dateString, {\n          width: \"abbreviated\"\n        }) || match.era(dateString, {\n          width: \"narrow\"\n        });\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n\nexports.EraParser = EraParser;","map":{"version":3,"names":["exports","EraParser","_Parser","require","Parser","priority","parse","dateString","token","match","era","width","set","date","flags","value","setFullYear","setHours","incompatibleTokens"],"sources":["D:/React-Car-Rental-Website-master/node_modules/date-fns/parse/_lib/parsers/EraParser.js"],"sourcesContent":["\"use strict\";\nexports.EraParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nclass EraParser extends _Parser.Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\nexports.EraParser = EraParser;\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,SAAR,GAAoB,KAAK,CAAzB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AAEA,MAAMF,SAAN,SAAwBC,OAAO,CAACE,MAAhC,CAAuC;EACrCC,QAAQ,GAAG,GAAH;;EAERC,KAAK,CAACC,UAAD,EAAaC,KAAb,EAAoBC,KAApB,EAA2B;IAC9B,QAAQD,KAAR;MACE;MACA,KAAK,GAAL;MACA,KAAK,IAAL;MACA,KAAK,KAAL;QACE,OACEC,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;UAAEI,KAAK,EAAE;QAAT,CAAtB,KACAF,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;UAAEI,KAAK,EAAE;QAAT,CAAtB,CAFF;MAKF;;MACA,KAAK,OAAL;QACE,OAAOF,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;UAAEI,KAAK,EAAE;QAAT,CAAtB,CAAP;MACF;;MACA,KAAK,MAAL;MACA;QACE,OACEF,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;UAAEI,KAAK,EAAE;QAAT,CAAtB,KACAF,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;UAAEI,KAAK,EAAE;QAAT,CAAtB,CADA,IAEAF,KAAK,CAACC,GAAN,CAAUH,UAAV,EAAsB;UAAEI,KAAK,EAAE;QAAT,CAAtB,CAHF;IAhBJ;EAsBD;;EAEDC,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,KAAd,EAAqB;IACtBD,KAAK,CAACJ,GAAN,GAAYK,KAAZ;IACAF,IAAI,CAACG,WAAL,CAAiBD,KAAjB,EAAwB,CAAxB,EAA2B,CAA3B;IACAF,IAAI,CAACI,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;IACA,OAAOJ,IAAP;EACD;;EAEDK,kBAAkB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAH;AAnCmB;;AAqCvClB,OAAO,CAACC,SAAR,GAAoBA,SAApB"},"metadata":{},"sourceType":"script"}