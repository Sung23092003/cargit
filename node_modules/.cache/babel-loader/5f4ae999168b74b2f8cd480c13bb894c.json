{"ast":null,"code":"\"use strict\";\n\nexports.Hour0To11Parser = void 0;\n\nvar _constants = require(\"../constants.js\");\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\nclass Hour0To11Parser extends _Parser.Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return (0, _utils.parseNumericPattern)(_constants.numericPatterns.hour11h, dateString);\n\n      case \"Ko\":\n        return match.ordinalNumber(dateString, {\n          unit: \"hour\"\n        });\n\n      default:\n        return (0, _utils.parseNDigits)(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\n\nexports.Hour0To11Parser = Hour0To11Parser;","map":{"version":3,"names":["exports","Hour0To11Parser","_constants","require","_Parser","_utils","Parser","priority","parse","dateString","token","match","parseNumericPattern","numericPatterns","hour11h","ordinalNumber","unit","parseNDigits","length","validate","_date","value","set","date","_flags","isPM","getHours","setHours","incompatibleTokens"],"sources":["D:/React-Car-Rental-Website-master/node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.js"],"sourcesContent":["\"use strict\";\nexports.Hour0To11Parser = void 0;\nvar _constants = require(\"../constants.js\");\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\nclass Hour0To11Parser extends _Parser.Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return (0, _utils.parseNumericPattern)(\n          _constants.numericPatterns.hour11h,\n          dateString,\n        );\n      case \"Ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return (0, _utils.parseNDigits)(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\nexports.Hour0To11Parser = Hour0To11Parser;\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,eAAR,GAA0B,KAAK,CAA/B;;AACA,IAAIC,UAAU,GAAGC,OAAO,CAAC,iBAAD,CAAxB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,cAAD,CAArB;;AAEA,IAAIE,MAAM,GAAGF,OAAO,CAAC,aAAD,CAApB;;AAEA,MAAMF,eAAN,SAA8BG,OAAO,CAACE,MAAtC,CAA6C;EAC3CC,QAAQ,GAAG,EAAH;;EAERC,KAAK,CAACC,UAAD,EAAaC,KAAb,EAAoBC,KAApB,EAA2B;IAC9B,QAAQD,KAAR;MACE,KAAK,GAAL;QACE,OAAO,CAAC,GAAGL,MAAM,CAACO,mBAAX,EACLV,UAAU,CAACW,eAAX,CAA2BC,OADtB,EAELL,UAFK,CAAP;;MAIF,KAAK,IAAL;QACE,OAAOE,KAAK,CAACI,aAAN,CAAoBN,UAApB,EAAgC;UAAEO,IAAI,EAAE;QAAR,CAAhC,CAAP;;MACF;QACE,OAAO,CAAC,GAAGX,MAAM,CAACY,YAAX,EAAyBP,KAAK,CAACQ,MAA/B,EAAuCT,UAAvC,CAAP;IATJ;EAWD;;EAEDU,QAAQ,CAACC,KAAD,EAAQC,KAAR,EAAe;IACrB,OAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA9B;EACD;;EAEDC,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeH,KAAf,EAAsB;IACvB,MAAMI,IAAI,GAAGF,IAAI,CAACG,QAAL,MAAmB,EAAhC;;IACA,IAAID,IAAI,IAAIJ,KAAK,GAAG,EAApB,EAAwB;MACtBE,IAAI,CAACI,QAAL,CAAcN,KAAK,GAAG,EAAtB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC;IACD,CAFD,MAEO;MACLE,IAAI,CAACI,QAAL,CAAcN,KAAd,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B;IACD;;IACD,OAAOE,IAAP;EACD;;EAEDK,kBAAkB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAH;AA/ByB;;AAiC7C5B,OAAO,CAACC,eAAR,GAA0BA,eAA1B"},"metadata":{},"sourceType":"script"}