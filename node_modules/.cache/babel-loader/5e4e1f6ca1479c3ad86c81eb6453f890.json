{"ast":null,"code":"\"use strict\";\n\nexports.startOfWeekYear = startOfWeekYear;\n\nvar _index = require(\"./constructFrom.js\");\n\nvar _index2 = require(\"./getWeekYear.js\");\n\nvar _index3 = require(\"./startOfWeek.js\");\n\nvar _index4 = require(\"./_lib/defaultOptions.js\");\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\n\n\nfunction startOfWeekYear(date, options) {\n  const defaultOptions = (0, _index4.getDefaultOptions)();\n  const firstWeekContainsDate = options?.firstWeekContainsDate ?? options?.locale?.options?.firstWeekContainsDate ?? defaultOptions.firstWeekContainsDate ?? defaultOptions.locale?.options?.firstWeekContainsDate ?? 1;\n  const year = (0, _index2.getWeekYear)(date, options);\n  const firstWeek = (0, _index.constructFrom)(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n\n  const _date = (0, _index3.startOfWeek)(firstWeek, options);\n\n  return _date;\n}","map":{"version":3,"names":["exports","startOfWeekYear","_index","require","_index2","_index3","_index4","date","options","defaultOptions","getDefaultOptions","firstWeekContainsDate","locale","year","getWeekYear","firstWeek","constructFrom","setFullYear","setHours","_date","startOfWeek"],"sources":["D:/React-Car-Rental-Website-master/node_modules/date-fns/startOfWeekYear.js"],"sourcesContent":["\"use strict\";\nexports.startOfWeekYear = startOfWeekYear;\nvar _index = require(\"./constructFrom.js\");\nvar _index2 = require(\"./getWeekYear.js\");\nvar _index3 = require(\"./startOfWeek.js\");\n\nvar _index4 = require(\"./_lib/defaultOptions.js\");\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nfunction startOfWeekYear(date, options) {\n  const defaultOptions = (0, _index4.getDefaultOptions)();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = (0, _index2.getWeekYear)(date, options);\n  const firstWeek = (0, _index.constructFrom)(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = (0, _index3.startOfWeek)(firstWeek, options);\n  return _date;\n}\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,eAAR,GAA0BA,eAA1B;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,kBAAD,CAArB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,kBAAD,CAArB;;AAEA,IAAIG,OAAO,GAAGH,OAAO,CAAC,0BAAD,CAArB;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,eAAT,CAAyBM,IAAzB,EAA+BC,OAA/B,EAAwC;EACtC,MAAMC,cAAc,GAAG,CAAC,GAAGH,OAAO,CAACI,iBAAZ,GAAvB;EACA,MAAMC,qBAAqB,GACzBH,OAAO,EAAEG,qBAAT,IACAH,OAAO,EAAEI,MAAT,EAAiBJ,OAAjB,EAA0BG,qBAD1B,IAEAF,cAAc,CAACE,qBAFf,IAGAF,cAAc,CAACG,MAAf,EAAuBJ,OAAvB,EAAgCG,qBAHhC,IAIA,CALF;EAOA,MAAME,IAAI,GAAG,CAAC,GAAGT,OAAO,CAACU,WAAZ,EAAyBP,IAAzB,EAA+BC,OAA/B,CAAb;EACA,MAAMO,SAAS,GAAG,CAAC,GAAGb,MAAM,CAACc,aAAX,EAA0BT,IAA1B,EAAgC,CAAhC,CAAlB;EACAQ,SAAS,CAACE,WAAV,CAAsBJ,IAAtB,EAA4B,CAA5B,EAA+BF,qBAA/B;EACAI,SAAS,CAACG,QAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B;;EACA,MAAMC,KAAK,GAAG,CAAC,GAAGd,OAAO,CAACe,WAAZ,EAAyBL,SAAzB,EAAoCP,OAApC,CAAd;;EACA,OAAOW,KAAP;AACD"},"metadata":{},"sourceType":"script"}