{"ast":null,"code":"\"use strict\";\n\nexports.secondsInYear = exports.secondsInWeek = exports.secondsInQuarter = exports.secondsInMonth = exports.secondsInMinute = exports.secondsInHour = exports.secondsInDay = exports.quartersInYear = exports.monthsInYear = exports.monthsInQuarter = exports.minutesInYear = exports.minutesInMonth = exports.minutesInHour = exports.minutesInDay = exports.minTime = exports.millisecondsInWeek = exports.millisecondsInSecond = exports.millisecondsInMinute = exports.millisecondsInHour = exports.millisecondsInDay = exports.maxTime = exports.daysInYear = exports.daysInWeek = void 0;\n/**\n* @module constants\n* @summary Useful constants\n* @description\n* Collection of useful date constants.\n*\n* The constants could be imported from `date-fns/constants`:\n*\n* ```ts\n* import { maxTime, minTime } from \"date-fns/constants\";\n*\n* function isAllowedTime(time) {\n*   return time <= maxTime && time >= minTime;\n* }\n* ```\n*/\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\n\nconst daysInWeek = exports.daysInWeek = 7;\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\n\nconst daysInYear = exports.daysInYear = 365.2425;\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\n\nconst maxTime = exports.maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\n\nconst minTime = exports.minTime = -maxTime;\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\n\nconst millisecondsInWeek = exports.millisecondsInWeek = 604800000;\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\n\nconst millisecondsInDay = exports.millisecondsInDay = 86400000;\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\n\nconst millisecondsInMinute = exports.millisecondsInMinute = 60000;\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\n\nconst millisecondsInHour = exports.millisecondsInHour = 3600000;\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\n\nconst millisecondsInSecond = exports.millisecondsInSecond = 1000;\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\n\nconst minutesInYear = exports.minutesInYear = 525600;\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\n\nconst minutesInMonth = exports.minutesInMonth = 43200;\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\n\nconst minutesInDay = exports.minutesInDay = 1440;\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\n\nconst minutesInHour = exports.minutesInHour = 60;\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\n\nconst monthsInQuarter = exports.monthsInQuarter = 3;\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\n\nconst monthsInYear = exports.monthsInYear = 12;\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\n\nconst quartersInYear = exports.quartersInYear = 4;\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\n\nconst secondsInHour = exports.secondsInHour = 3600;\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\n\nconst secondsInMinute = exports.secondsInMinute = 60;\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\n\nconst secondsInDay = exports.secondsInDay = secondsInHour * 24;\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\n\nconst secondsInWeek = exports.secondsInWeek = secondsInDay * 7;\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\n\nconst secondsInYear = exports.secondsInYear = secondsInDay * daysInYear;\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\n\nconst secondsInMonth = exports.secondsInMonth = secondsInYear / 12;\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\n\nconst secondsInQuarter = exports.secondsInQuarter = secondsInMonth * 3;","map":{"version":3,"names":["exports","secondsInYear","secondsInWeek","secondsInQuarter","secondsInMonth","secondsInMinute","secondsInHour","secondsInDay","quartersInYear","monthsInYear","monthsInQuarter","minutesInYear","minutesInMonth","minutesInHour","minutesInDay","minTime","millisecondsInWeek","millisecondsInSecond","millisecondsInMinute","millisecondsInHour","millisecondsInDay","maxTime","daysInYear","daysInWeek","Math","pow"],"sources":["D:/React-Car-Rental-Website-master/node_modules/date-fns/constants.js"],"sourcesContent":["\"use strict\";\nexports.secondsInYear =\n  exports.secondsInWeek =\n  exports.secondsInQuarter =\n  exports.secondsInMonth =\n  exports.secondsInMinute =\n  exports.secondsInHour =\n  exports.secondsInDay =\n  exports.quartersInYear =\n  exports.monthsInYear =\n  exports.monthsInQuarter =\n  exports.minutesInYear =\n  exports.minutesInMonth =\n  exports.minutesInHour =\n  exports.minutesInDay =\n  exports.minTime =\n  exports.millisecondsInWeek =\n  exports.millisecondsInSecond =\n  exports.millisecondsInMinute =\n  exports.millisecondsInHour =\n  exports.millisecondsInDay =\n  exports.maxTime =\n  exports.daysInYear =\n  exports.daysInWeek =\n    void 0; /**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nconst daysInWeek = (exports.daysInWeek = 7);\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nconst daysInYear = (exports.daysInYear = 365.2425);\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nconst maxTime = (exports.maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000);\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nconst minTime = (exports.minTime = -maxTime);\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nconst millisecondsInWeek = (exports.millisecondsInWeek = 604800000);\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nconst millisecondsInDay = (exports.millisecondsInDay = 86400000);\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nconst millisecondsInMinute = (exports.millisecondsInMinute = 60000);\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nconst millisecondsInHour = (exports.millisecondsInHour = 3600000);\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nconst millisecondsInSecond = (exports.millisecondsInSecond = 1000);\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nconst minutesInYear = (exports.minutesInYear = 525600);\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nconst minutesInMonth = (exports.minutesInMonth = 43200);\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nconst minutesInDay = (exports.minutesInDay = 1440);\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nconst minutesInHour = (exports.minutesInHour = 60);\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nconst monthsInQuarter = (exports.monthsInQuarter = 3);\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nconst monthsInYear = (exports.monthsInYear = 12);\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nconst quartersInYear = (exports.quartersInYear = 4);\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nconst secondsInHour = (exports.secondsInHour = 3600);\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nconst secondsInMinute = (exports.secondsInMinute = 60);\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nconst secondsInDay = (exports.secondsInDay = secondsInHour * 24);\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nconst secondsInWeek = (exports.secondsInWeek = secondsInDay * 7);\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nconst secondsInYear = (exports.secondsInYear = secondsInDay * daysInYear);\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nconst secondsInMonth = (exports.secondsInMonth = secondsInYear / 12);\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nconst secondsInQuarter = (exports.secondsInQuarter = secondsInMonth * 3);\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,aAAR,GACED,OAAO,CAACE,aAAR,GACAF,OAAO,CAACG,gBAAR,GACAH,OAAO,CAACI,cAAR,GACAJ,OAAO,CAACK,eAAR,GACAL,OAAO,CAACM,aAAR,GACAN,OAAO,CAACO,YAAR,GACAP,OAAO,CAACQ,cAAR,GACAR,OAAO,CAACS,YAAR,GACAT,OAAO,CAACU,eAAR,GACAV,OAAO,CAACW,aAAR,GACAX,OAAO,CAACY,cAAR,GACAZ,OAAO,CAACa,aAAR,GACAb,OAAO,CAACc,YAAR,GACAd,OAAO,CAACe,OAAR,GACAf,OAAO,CAACgB,kBAAR,GACAhB,OAAO,CAACiB,oBAAR,GACAjB,OAAO,CAACkB,oBAAR,GACAlB,OAAO,CAACmB,kBAAR,GACAnB,OAAO,CAACoB,iBAAR,GACApB,OAAO,CAACqB,OAAR,GACArB,OAAO,CAACsB,UAAR,GACAtB,OAAO,CAACuB,UAAR,GACE,KAAK,CAvBT;AAuBY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMA,UAAU,GAAIvB,OAAO,CAACuB,UAAR,GAAqB,CAAzC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMD,UAAU,GAAItB,OAAO,CAACsB,UAAR,GAAqB,QAAzC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMD,OAAO,GAAIrB,OAAO,CAACqB,OAAR,GAAkBG,IAAI,CAACC,GAAL,CAAS,EAAT,EAAa,CAAb,IAAkB,EAAlB,GAAuB,EAAvB,GAA4B,EAA5B,GAAiC,IAApE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMV,OAAO,GAAIf,OAAO,CAACe,OAAR,GAAkB,CAACM,OAApC;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAML,kBAAkB,GAAIhB,OAAO,CAACgB,kBAAR,GAA6B,SAAzD;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMI,iBAAiB,GAAIpB,OAAO,CAACoB,iBAAR,GAA4B,QAAvD;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMF,oBAAoB,GAAIlB,OAAO,CAACkB,oBAAR,GAA+B,KAA7D;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,kBAAkB,GAAInB,OAAO,CAACmB,kBAAR,GAA6B,OAAzD;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMF,oBAAoB,GAAIjB,OAAO,CAACiB,oBAAR,GAA+B,IAA7D;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMN,aAAa,GAAIX,OAAO,CAACW,aAAR,GAAwB,MAA/C;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAIZ,OAAO,CAACY,cAAR,GAAyB,KAAjD;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAME,YAAY,GAAId,OAAO,CAACc,YAAR,GAAuB,IAA7C;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMD,aAAa,GAAIb,OAAO,CAACa,aAAR,GAAwB,EAA/C;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMH,eAAe,GAAIV,OAAO,CAACU,eAAR,GAA0B,CAAnD;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMD,YAAY,GAAIT,OAAO,CAACS,YAAR,GAAuB,EAA7C;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMD,cAAc,GAAIR,OAAO,CAACQ,cAAR,GAAyB,CAAjD;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMF,aAAa,GAAIN,OAAO,CAACM,aAAR,GAAwB,IAA/C;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMD,eAAe,GAAIL,OAAO,CAACK,eAAR,GAA0B,EAAnD;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAME,YAAY,GAAIP,OAAO,CAACO,YAAR,GAAuBD,aAAa,GAAG,EAA7D;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMJ,aAAa,GAAIF,OAAO,CAACE,aAAR,GAAwBK,YAAY,GAAG,CAA9D;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMN,aAAa,GAAID,OAAO,CAACC,aAAR,GAAwBM,YAAY,GAAGe,UAA9D;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMlB,cAAc,GAAIJ,OAAO,CAACI,cAAR,GAAyBH,aAAa,GAAG,EAAjE;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAME,gBAAgB,GAAIH,OAAO,CAACG,gBAAR,GAA2BC,cAAc,GAAG,CAAtE"},"metadata":{},"sourceType":"script"}