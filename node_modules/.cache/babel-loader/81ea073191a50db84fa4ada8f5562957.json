{"ast":null,"code":"\"use strict\";\n\nexports.setMonth = setMonth;\n\nvar _index = require(\"./constructFrom.js\");\n\nvar _index2 = require(\"./getDaysInMonth.js\");\n\nvar _index3 = require(\"./toDate.js\");\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param month - The month index to set (0-11)\n *\n * @returns The new date with the month set\n *\n * @example\n * // Set February to 1 September 2014:\n * const result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\n\n\nfunction setMonth(date, month) {\n  const _date = (0, _index3.toDate)(date);\n\n  const year = _date.getFullYear();\n\n  const day = _date.getDate();\n\n  const dateWithDesiredMonth = (0, _index.constructFrom)(date, 0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  const daysInMonth = (0, _index2.getDaysInMonth)(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  _date.setMonth(month, Math.min(day, daysInMonth));\n\n  return _date;\n}","map":{"version":3,"names":["exports","setMonth","_index","require","_index2","_index3","date","month","_date","toDate","year","getFullYear","day","getDate","dateWithDesiredMonth","constructFrom","setFullYear","setHours","daysInMonth","getDaysInMonth","Math","min"],"sources":["D:/React-Car-Rental-Website-master/node_modules/date-fns/setMonth.js"],"sourcesContent":["\"use strict\";\nexports.setMonth = setMonth;\nvar _index = require(\"./constructFrom.js\");\nvar _index2 = require(\"./getDaysInMonth.js\");\nvar _index3 = require(\"./toDate.js\");\n\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param month - The month index to set (0-11)\n *\n * @returns The new date with the month set\n *\n * @example\n * // Set February to 1 September 2014:\n * const result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\nfunction setMonth(date, month) {\n  const _date = (0, _index3.toDate)(date);\n  const year = _date.getFullYear();\n  const day = _date.getDate();\n\n  const dateWithDesiredMonth = (0, _index.constructFrom)(date, 0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  const daysInMonth = (0, _index2.getDaysInMonth)(dateWithDesiredMonth);\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  _date.setMonth(month, Math.min(day, daysInMonth));\n  return _date;\n}\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,QAAR,GAAmBA,QAAnB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,qBAAD,CAArB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,aAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,QAAT,CAAkBK,IAAlB,EAAwBC,KAAxB,EAA+B;EAC7B,MAAMC,KAAK,GAAG,CAAC,GAAGH,OAAO,CAACI,MAAZ,EAAoBH,IAApB,CAAd;;EACA,MAAMI,IAAI,GAAGF,KAAK,CAACG,WAAN,EAAb;;EACA,MAAMC,GAAG,GAAGJ,KAAK,CAACK,OAAN,EAAZ;;EAEA,MAAMC,oBAAoB,GAAG,CAAC,GAAGZ,MAAM,CAACa,aAAX,EAA0BT,IAA1B,EAAgC,CAAhC,CAA7B;EACAQ,oBAAoB,CAACE,WAArB,CAAiCN,IAAjC,EAAuCH,KAAvC,EAA8C,EAA9C;EACAO,oBAAoB,CAACG,QAArB,CAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,CAAvC;EACA,MAAMC,WAAW,GAAG,CAAC,GAAGd,OAAO,CAACe,cAAZ,EAA4BL,oBAA5B,CAApB,CAR6B,CAS7B;EACA;;EACAN,KAAK,CAACP,QAAN,CAAeM,KAAf,EAAsBa,IAAI,CAACC,GAAL,CAAST,GAAT,EAAcM,WAAd,CAAtB;;EACA,OAAOV,KAAP;AACD"},"metadata":{},"sourceType":"script"}