{"ast":null,"code":"\"use strict\";\n\nexports.getTimezoneOffsetInMilliseconds = getTimezoneOffsetInMilliseconds;\n\nvar _index = require(\"../toDate.js\");\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\n\nfunction getTimezoneOffsetInMilliseconds(date) {\n  const _date = (0, _index.toDate)(date);\n\n  const utcDate = new Date(Date.UTC(_date.getFullYear(), _date.getMonth(), _date.getDate(), _date.getHours(), _date.getMinutes(), _date.getSeconds(), _date.getMilliseconds()));\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}","map":{"version":3,"names":["exports","getTimezoneOffsetInMilliseconds","_index","require","date","_date","toDate","utcDate","Date","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear"],"sources":["D:/React-Car-Rental-Website-master/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js"],"sourcesContent":["\"use strict\";\nexports.getTimezoneOffsetInMilliseconds = getTimezoneOffsetInMilliseconds;\nvar _index = require(\"../toDate.js\");\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nfunction getTimezoneOffsetInMilliseconds(date) {\n  const _date = (0, _index.toDate)(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,+BAAR,GAA0CA,+BAA1C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,cAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,+BAAT,CAAyCG,IAAzC,EAA+C;EAC7C,MAAMC,KAAK,GAAG,CAAC,GAAGH,MAAM,CAACI,MAAX,EAAmBF,IAAnB,CAAd;;EACA,MAAMG,OAAO,GAAG,IAAIC,IAAJ,CACdA,IAAI,CAACC,GAAL,CACEJ,KAAK,CAACK,WAAN,EADF,EAEEL,KAAK,CAACM,QAAN,EAFF,EAGEN,KAAK,CAACO,OAAN,EAHF,EAIEP,KAAK,CAACQ,QAAN,EAJF,EAKER,KAAK,CAACS,UAAN,EALF,EAMET,KAAK,CAACU,UAAN,EANF,EAOEV,KAAK,CAACW,eAAN,EAPF,CADc,CAAhB;EAWAT,OAAO,CAACU,cAAR,CAAuBZ,KAAK,CAACK,WAAN,EAAvB;EACA,OAAO,CAACN,IAAD,GAAQ,CAACG,OAAhB;AACD"},"metadata":{},"sourceType":"script"}