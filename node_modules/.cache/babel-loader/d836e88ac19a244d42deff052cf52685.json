{"ast":null,"code":"\"use strict\";\n\nexports.isAfter = isAfter;\n\nvar _index = require(\"./toDate.js\");\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date that should be after the other one to return true\n * @param dateToCompare - The date to compare with\n *\n * @returns The first date is after the second date\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\n\n\nfunction isAfter(date, dateToCompare) {\n  const _date = (0, _index.toDate)(date);\n\n  const _dateToCompare = (0, _index.toDate)(dateToCompare);\n\n  return _date.getTime() > _dateToCompare.getTime();\n}","map":{"version":3,"names":["exports","isAfter","_index","require","date","dateToCompare","_date","toDate","_dateToCompare","getTime"],"sources":["D:/React-Car-Rental-Website-master/node_modules/date-fns/isAfter.js"],"sourcesContent":["\"use strict\";\nexports.isAfter = isAfter;\nvar _index = require(\"./toDate.js\");\n\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date that should be after the other one to return true\n * @param dateToCompare - The date to compare with\n *\n * @returns The first date is after the second date\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nfunction isAfter(date, dateToCompare) {\n  const _date = (0, _index.toDate)(date);\n  const _dateToCompare = (0, _index.toDate)(dateToCompare);\n  return _date.getTime() > _dateToCompare.getTime();\n}\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,OAAR,GAAkBA,OAAlB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,OAAT,CAAiBG,IAAjB,EAAuBC,aAAvB,EAAsC;EACpC,MAAMC,KAAK,GAAG,CAAC,GAAGJ,MAAM,CAACK,MAAX,EAAmBH,IAAnB,CAAd;;EACA,MAAMI,cAAc,GAAG,CAAC,GAAGN,MAAM,CAACK,MAAX,EAAmBF,aAAnB,CAAvB;;EACA,OAAOC,KAAK,CAACG,OAAN,KAAkBD,cAAc,CAACC,OAAf,EAAzB;AACD"},"metadata":{},"sourceType":"script"}