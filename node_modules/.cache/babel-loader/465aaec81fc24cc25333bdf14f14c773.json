{"ast":null,"code":"\"use strict\";\n\nexports.isSameYear = isSameYear;\n\nvar _index = require(\"./toDate.js\");\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n *\n * @returns The dates are in the same year\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * const result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\n\nfunction isSameYear(dateLeft, dateRight) {\n  const _dateLeft = (0, _index.toDate)(dateLeft);\n\n  const _dateRight = (0, _index.toDate)(dateRight);\n\n  return _dateLeft.getFullYear() === _dateRight.getFullYear();\n}","map":{"version":3,"names":["exports","isSameYear","_index","require","dateLeft","dateRight","_dateLeft","toDate","_dateRight","getFullYear"],"sources":["D:/React-Car-Rental-Website-master/node_modules/date-fns/isSameYear.js"],"sourcesContent":["\"use strict\";\nexports.isSameYear = isSameYear;\nvar _index = require(\"./toDate.js\");\n\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n *\n * @returns The dates are in the same year\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * const result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\nfunction isSameYear(dateLeft, dateRight) {\n  const _dateLeft = (0, _index.toDate)(dateLeft);\n  const _dateRight = (0, _index.toDate)(dateRight);\n  return _dateLeft.getFullYear() === _dateRight.getFullYear();\n}\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,UAAR,GAAqBA,UAArB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,UAAT,CAAoBG,QAApB,EAA8BC,SAA9B,EAAyC;EACvC,MAAMC,SAAS,GAAG,CAAC,GAAGJ,MAAM,CAACK,MAAX,EAAmBH,QAAnB,CAAlB;;EACA,MAAMI,UAAU,GAAG,CAAC,GAAGN,MAAM,CAACK,MAAX,EAAmBF,SAAnB,CAAnB;;EACA,OAAOC,SAAS,CAACG,WAAV,OAA4BD,UAAU,CAACC,WAAX,EAAnC;AACD"},"metadata":{},"sourceType":"script"}