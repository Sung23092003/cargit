{"ast":null,"code":"\"use strict\";\n\nexports.addDays = addDays;\n\nvar _index = require(\"./toDate.js\");\n\nvar _index2 = require(\"./constructFrom.js\");\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\n\nfunction addDays(date, amount) {\n  const _date = (0, _index.toDate)(date);\n\n  if (isNaN(amount)) return (0, _index2.constructFrom)(date, NaN);\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n\n  _date.setDate(_date.getDate() + amount);\n\n  return _date;\n}","map":{"version":3,"names":["exports","addDays","_index","require","_index2","date","amount","_date","toDate","isNaN","constructFrom","NaN","setDate","getDate"],"sources":["D:/React-Car-Rental-Website-master/node_modules/date-fns/addDays.js"],"sourcesContent":["\"use strict\";\nexports.addDays = addDays;\nvar _index = require(\"./toDate.js\");\nvar _index2 = require(\"./constructFrom.js\");\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nfunction addDays(date, amount) {\n  const _date = (0, _index.toDate)(date);\n  if (isNaN(amount)) return (0, _index2.constructFrom)(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,OAAR,GAAkBA,OAAlB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,oBAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,OAAT,CAAiBI,IAAjB,EAAuBC,MAAvB,EAA+B;EAC7B,MAAMC,KAAK,GAAG,CAAC,GAAGL,MAAM,CAACM,MAAX,EAAmBH,IAAnB,CAAd;;EACA,IAAII,KAAK,CAACH,MAAD,CAAT,EAAmB,OAAO,CAAC,GAAGF,OAAO,CAACM,aAAZ,EAA2BL,IAA3B,EAAiCM,GAAjC,CAAP;;EACnB,IAAI,CAACL,MAAL,EAAa;IACX;IACA,OAAOC,KAAP;EACD;;EACDA,KAAK,CAACK,OAAN,CAAcL,KAAK,CAACM,OAAN,KAAkBP,MAAhC;;EACA,OAAOC,KAAP;AACD"},"metadata":{},"sourceType":"script"}