{"ast":null,"code":"\"use strict\";\n\nexports.LocalWeekYearParser = void 0;\n\nvar _index = require(\"../../../getWeekYear.js\");\n\nvar _index2 = require(\"../../../startOfWeek.js\");\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\"); // Local week-numbering year\n\n\nclass LocalWeekYearParser extends _Parser.Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = year => ({\n      year,\n      isTwoDigitYear: token === \"YY\"\n    });\n\n    switch (token) {\n      case \"Y\":\n        return (0, _utils.mapValue)((0, _utils.parseNDigits)(4, dateString), valueCallback);\n\n      case \"Yo\":\n        return (0, _utils.mapValue)(match.ordinalNumber(dateString, {\n          unit: \"year\"\n        }), valueCallback);\n\n      default:\n        return (0, _utils.mapValue)((0, _utils.parseNDigits)(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = (0, _index.getWeekYear)(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = (0, _utils.normalizeTwoDigitYear)(value.year, currentYear);\n      date.setFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n      date.setHours(0, 0, 0, 0);\n      return (0, _index2.startOfWeek)(date, options);\n    }\n\n    const year = !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return (0, _index2.startOfWeek)(date, options);\n  }\n\n  incompatibleTokens = [\"y\", \"R\", \"u\", \"Q\", \"q\", \"M\", \"L\", \"I\", \"d\", \"D\", \"i\", \"t\", \"T\"];\n}\n\nexports.LocalWeekYearParser = LocalWeekYearParser;","map":{"version":3,"names":["exports","LocalWeekYearParser","_index","require","_index2","_Parser","_utils","Parser","priority","parse","dateString","token","match","valueCallback","year","isTwoDigitYear","mapValue","parseNDigits","ordinalNumber","unit","length","validate","_date","value","set","date","flags","options","currentYear","getWeekYear","normalizedTwoDigitYear","normalizeTwoDigitYear","setFullYear","firstWeekContainsDate","setHours","startOfWeek","era","incompatibleTokens"],"sources":["D:/React-Car-Rental-Website-master/node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.js"],"sourcesContent":["\"use strict\";\nexports.LocalWeekYearParser = void 0;\nvar _index = require(\"../../../getWeekYear.js\");\n\nvar _index2 = require(\"../../../startOfWeek.js\");\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\n// Local week-numbering year\nclass LocalWeekYearParser extends _Parser.Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return (0, _utils.mapValue)(\n          (0, _utils.parseNDigits)(4, dateString),\n          valueCallback,\n        );\n      case \"Yo\":\n        return (0, _utils.mapValue)(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return (0, _utils.mapValue)(\n          (0, _utils.parseNDigits)(token.length, dateString),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = (0, _index.getWeekYear)(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = (0, _utils.normalizeTwoDigitYear)(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return (0, _index2.startOfWeek)(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return (0, _index2.startOfWeek)(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\nexports.LocalWeekYearParser = LocalWeekYearParser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}