{"ast":null,"code":"\"use strict\";\n\nexports.ISOWeekYearParser = void 0;\n\nvar _index = require(\"../../../startOfISOWeek.js\");\n\nvar _index2 = require(\"../../../constructFrom.js\");\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\"); // ISO week-numbering year\n\n\nclass ISOWeekYearParser extends _Parser.Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return (0, _utils.parseNDigitsSigned)(4, dateString);\n    }\n\n    return (0, _utils.parseNDigitsSigned)(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = (0, _index2.constructFrom)(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return (0, _index.startOfISOWeek)(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"u\", \"Q\", \"q\", \"M\", \"L\", \"w\", \"d\", \"D\", \"e\", \"c\", \"t\", \"T\"];\n}\n\nexports.ISOWeekYearParser = ISOWeekYearParser;","map":{"version":3,"names":["exports","ISOWeekYearParser","_index","require","_index2","_Parser","_utils","Parser","priority","parse","dateString","token","parseNDigitsSigned","length","set","date","_flags","value","firstWeekOfYear","constructFrom","setFullYear","setHours","startOfISOWeek","incompatibleTokens"],"sources":["D:/React-Car-Rental-Website-master/node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.js"],"sourcesContent":["\"use strict\";\nexports.ISOWeekYearParser = void 0;\nvar _index = require(\"../../../startOfISOWeek.js\");\nvar _index2 = require(\"../../../constructFrom.js\");\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\n// ISO week-numbering year\nclass ISOWeekYearParser extends _Parser.Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return (0, _utils.parseNDigitsSigned)(4, dateString);\n    }\n\n    return (0, _utils.parseNDigitsSigned)(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = (0, _index2.constructFrom)(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return (0, _index.startOfISOWeek)(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\n    \"G\",\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\nexports.ISOWeekYearParser = ISOWeekYearParser;\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,iBAAR,GAA4B,KAAK,CAAjC;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,4BAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,2BAAD,CAArB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,cAAD,CAArB;;AAEA,IAAIG,MAAM,GAAGH,OAAO,CAAC,aAAD,CAApB,C,CAEA;;;AACA,MAAMF,iBAAN,SAAgCI,OAAO,CAACE,MAAxC,CAA+C;EAC7CC,QAAQ,GAAG,GAAH;;EAERC,KAAK,CAACC,UAAD,EAAaC,KAAb,EAAoB;IACvB,IAAIA,KAAK,KAAK,GAAd,EAAmB;MACjB,OAAO,CAAC,GAAGL,MAAM,CAACM,kBAAX,EAA+B,CAA/B,EAAkCF,UAAlC,CAAP;IACD;;IAED,OAAO,CAAC,GAAGJ,MAAM,CAACM,kBAAX,EAA+BD,KAAK,CAACE,MAArC,EAA6CH,UAA7C,CAAP;EACD;;EAEDI,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf,EAAsB;IACvB,MAAMC,eAAe,GAAG,CAAC,GAAGd,OAAO,CAACe,aAAZ,EAA2BJ,IAA3B,EAAiC,CAAjC,CAAxB;IACAG,eAAe,CAACE,WAAhB,CAA4BH,KAA5B,EAAmC,CAAnC,EAAsC,CAAtC;IACAC,eAAe,CAACG,QAAhB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC;IACA,OAAO,CAAC,GAAGnB,MAAM,CAACoB,cAAX,EAA2BJ,eAA3B,CAAP;EACD;;EAEDK,kBAAkB,GAAG,CACnB,GADmB,EAEnB,GAFmB,EAGnB,GAHmB,EAInB,GAJmB,EAKnB,GALmB,EAMnB,GANmB,EAOnB,GAPmB,EAQnB,GARmB,EASnB,GATmB,EAUnB,GAVmB,EAWnB,GAXmB,EAYnB,GAZmB,EAanB,GAbmB,EAcnB,GAdmB,EAenB,GAfmB,CAAH;AAlB2B;;AAoC/CvB,OAAO,CAACC,iBAAR,GAA4BA,iBAA5B"},"metadata":{},"sourceType":"script"}